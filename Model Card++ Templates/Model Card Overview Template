# [Insert Name Here] Overview

## Description: <br>
Describe what this algorithm/model does starting with the model name and verb; this should be one sentence starting with the model name. You may add additional detail following the initial sentence. For instance, _______ [insert name of model] _______ [insert verb] _______.] <br>
 
Please pick one of the following to insert at the end of your description:[This model is ready for commercial/non-commercial use.] OR [This model is for research and development only.] OR [This model is for demonstration purposes and not for production usage.]  <br>

## Third-Party Community Consideration [(Insert for Non-NVIDIA Third-Party Community Models)] <br>
This model is not owned or developed by NVIDIA. This model has been developed and built to a third-party’s requirements for this application and use case; see link to Non-NVIDIA [(Insert Name) Model Card](Insert Link).

### License/Terms of Use: <br> 

### Deployment Geography: <br>
[Insert Global; Asia-Pacific (APAC); Europe, Middle East, and Africa (EMEA); Latin America (LATAM), North America (NAM), and/or specific countries]

### Use Case: <br>
[Answer who would be expected to use this system and for what] <br>

### Release Date:  <br>
Build.Nvidia.com [Insert MM/DD/YYY] via [URL] <br> 
Github [Insert MM/DD/YYY] via [URL] <br> 
Huggingface [Insert MM/DD/YYY] via [URL] <br> 
NGC [Insert MM/DD/YYY] <br>

## Reference(s) (Leave Blank If None):
[Provide list of reference(s), link(s) to the publication/paper/article, associated works, and lineage where relevant.]  <br> 

## Model Architecture: <br> 
**Architecture Type:** [Classify the architecture of the neural network if applicable (Convolution Neural Network (CNN), Recurrent Neural Network (RNN), or List Something Else]  <br>
**Network Architecture:** [(DarkNet19, DarkNet53, DetectNetv2, GoogleNet, MobileNet_v1, MobileNetv2, NvHelnet10, NvHelnet18, ResNet10, ResNet18, ResNet34, ResNet34, ResNet50, SqueezeNet, UNET, Vegg16, Vegg19, VGG10, or List Something Else] <br>
 
**This model was developed based on [insert base model name (if applicable)] 
** This model has [insert number here] of model parameters. <br>

(Internal Only: Not To Be Published) <br> 
** Describe design choices related to initialization techniques, hyperparameter tuning, regularization techniques, model optimization, damping, and training parameters. [CAN BE EXTRACTED FROM MODEL CARD GENERATOR]  <br>   

## Input: <br>
**Input Type(s):** [Audio, Image, Text, Tabular, etcetera (etc.)] <br>
**Input Format(s):** [Red, Green, Blue (RGB), Infrared (IR), Lidar, or String] <br>
**Input Parameters:** [(1D, 2D, 3D, etcetera)] <br>
**Other Properties Related to Input:** [Specific Resolution/Minimum or Maximum Resolution, Characters (Including Restrictions), or Tokens;  Image Range Needed (W x Y x Z), Pre-Processing Needed, Alpha Channel, Bit; If None Applicable, Please State Explicitly] <br>
**For GPAI Models: State size and length limits for each input modality <br>

## Output: <br>
**Output Type(s):** [Audio, Image, Text, Tabular, etc.] <br>
**Output Format:** [Red, Green, Blue (RGB), Infrared (IR), Lidar, or String] <br>
**Output Parameters:** [(1D, 2D, 3D, etcetera)] <br>
**Other Properties Related to Output:** [Specific Resolution/Minimum or Maximum Resolution or Characters (Including Restrictions), or Tokens; Image Range (W x Y x Z), Post-Processing Needed, Alpha Channel, Bit; If None Applicable, Please State Explicitly] <br> 
Our AI models are designed and/or optimized to run on NVIDIA GPU-accelerated systems [or name equivalent hardware preference]. By leveraging NVIDIA’s hardware (e.g. GPU cores) and software frameworks (e.g., CUDA libraries), the model achieves faster training and inference times compared to CPU-only solutions. <br>   

## Software Integration (Required For NVIDIA Models Only): <br>
**Runtime Engine(s):** <br>
* [BioNeMo- Name Mininimally Compatible Version] <br>
* [DeepStream- Name Mininimally Compatible Version] <br>
* [DXIS- Name Mininimally Compatible Version] <br>
* [Maxine- Name Mininimally Compatible Version] <br>
* [Morpheus- Name Mininimally Compatible Version] <br>
* [NeMo- Name Mininimally Compatible Version] <br>
* [Riva- Name Minimally Compatible Version] <br>
* [TAO- Name Minimally Compatible Version] <br>
* [Not Applicable (N/A)- Name Platform If Multiple] <br> 

**Supported Hardware Microarchitecture Compatibility:** <br>
* [NVIDIA Ampere or specific models] <br>
* [NVIDIA Blackwell or specific models] <br>
* [NVIDIA Jetson or specific models]  <br>
* [NVIDIA Hopper or specific models] <br>
* [NVIDIA Lovelace or specific models] <br>
* [NVIDIA Pascal or specific models] <br>
* [NVIDIA Turing or specific models] <br>
* [NVIDIA Volta or specific models] <br>
* [Insert NVIDIA Microarchitecture Name Not Listed Above] <br>

**[Preferred/Supported] Operating System(s):** <br>
* [Linux] <br>
* [Linux 4 Tegra] <br>
* [QNX]  <br>
* [Windows] <br>
* [Name Other Not Listed Above] <br>

This AI model can be embedded as an Application Programming Interface (API) call into the architecture described above. <br>

## Model Version(s): 
[Use unique identifier for identifying the model in the future- this may be part of our internal naming, specifying variation like "pruned," "unpruned," "trained," or "deployable" or "quantized" where necessary and including a versioning number like vX.X along with short description differentiating if multiple versions are available]  <br>

(Optional) Describe how the model can be integrated into an AI system. <br>
 
# Training, Testing, and Evaluation Datasets: <br>

(For GPAI Models Only)
** The total size (in number of data points) <br>
** Total number of datasets <br>   
** Dataset partition: Training [%], testing [%], validation [%] <br> 
** Time period for training data collection [insert] <br> 
** Time period for testing data collection [insert] <br> 
** Time period for validation data collection [insert] <br>
 
(For GPAI Models Only)
** A general description of the data processing involved in transforming the acquired data into the training data for the model <br>
 
(For GPAI Models Only)
#Public Datasets <br>
 
*List of 'main/large' datasets (above 5% of the overall data in this category) with unique identification, links, and period of collection <br> 
(For GPAI Models Only)
#Private Non-publicly Accessible Datasets <br>
 
*List of 'main/large' private data sets acquired from other third parties (above 5% of the overall data in this category), unique identifiers and links (if available), and narrative description and period of collection <br> 
(For GPAI Models Only)
#If using data crawled and scraped from online sources by NVIDIA <br>
 
(For GPAI Models Only)
* Overall size per modality, period of scraping <br> 
* Identification of crawlers, their purpose and behavior; <br> 
* The period of data collection and name of organization(s) operating the crawler for each web crawler used <br> 
* A general description of how the crawler respects preferences indicated in robots.txt for each web crawler used <br> 
* Explanation what content has been targeted; <br> 
* List of top 10 % of all internet domain names per type of data modality (e.g., text, image. <br> 
* Measures implemented to respect reservations of rights from the text and data-mining exception under Art.4(3) DSM Directive during data collection incl. specification of the opt-out protocols and solutions honored by the provider [STANDARDIZED INPUT] <br>
 
(For GPAI Models Only)
#If using user-sourced data (collected by provider incl. prompts) 
* Overall size per modality <br>
* List of providers' services/products <br>
 
(For GPAI Models Only)
#If self-sourced synthetic data(sets) 
*Overall size per modality <br> 
* A description of the methods, if any, used to synthetically generate training data <br>
* The name(s) of any AI model(s) or system(s) used to synthetically generate training data <br> 

## Training Dataset [The dataset the model was trained on]:
**Link:** [Link or name to dataset used for training the model.  Share nSpect IDs.  nSpect IDs will be internal-only]  <br>
** Data Collection Method by dataset <br>
* [Automated] <br>
* [Automatic/Sensors] <br>
* [Human] <br>
* [Synthetic] <br>
* [Undisclosed] <br>
* [Hybrid: _______, _______] <br>
* [Not Applicable] <br>
** Labeling Method by dataset <br>
* [Automated] <br>
* [Automatic/Sensors] <br>
* [Human] <br>
* [Synthetic] <br>
* [Undisclosed] <br>
* [Hybrid: _______, _______] <br>
* [Not Applicable] <br>
**Properties (Quantity, Dataset Descriptions, Sensor(s)):** [Number of data items in training set, Descriptive Information about the data, If applicable, what specific sensor type was used for Data Collection] <br>
**Dataset License(s):** [Name, Link applicable to dataset license or applicable Jira ticket or NVBug. Write none if not applicable (N/A). This is an internal-only field.] <br>

## Testing Dataset [Typically, a subset of the training dataset that affirms the model is performing as expected]:
**Link:** [Link or name to dataset used for testing the model.  Share nSpect IDs.  nSpect IDs will be internal-only]  <br>
** Data Collection Method by dataset <br>
* [Automated] <br>
* [Automatic/Sensors] <br>
* [Human] <br>
* [Synthetic] <br>
* [Undisclosed] <br>
* [Hybrid: _______, _______] <br>
* [Not Applicable] <br>
** Labeling Method by dataset <br>
* [Automated] <br>
* [Automatic/Sensors] <br>
* [Human] <br>
* [Synthetic] <br>
* [Undisclosed] <br>
* [Hybrid: _______, _______] <br>
* [Not Applicable] <br>
**Properties (Quantity, Dataset Descriptions, Sensor(s)):** [Number of data items in test set, Descriptive Information about the data, If applicable, what specific sensor type was used for Data Collection] <br>
**Dataset License(s):** [Name, Link applicable to dataset license or applicable Jira ticket or NVBug. Write none if not applicable (N/A). This is an internal-only field.] <br>

## Evaluation Dataset [Dataset used to formally evaluate the model apart from the training dataset]:
**Link:** [Link or name to dataset used for evaluating the model.  Share nSpect IDs.  nSpect IDs will be internal-only]  <br>
(Internal Only: Not To Be Published) <br> 
**Benchmark Score <br>

** Data Collection Method by dataset <br>
* [Automated] <br>
* [Automatic/Sensors] <br>
* [Human] <br>
* [Synthetic] <br>
* [Undisclosed] <br>
* [Hybrid: _______, _______] <br>
* [Not Applicable] <br>
** Labeling Method by dataset <br>
* [Automated] <br>
* [Automatic/Sensors] <br>
* [Human] <br>
* [Synthetic] <br>
* [Undisclosed] <br>
* [Hybrid: _______, _______] <br>
* [Not Applicable] <br>
**Properties (Quantity, Dataset Descriptions, Sensor(s)):** [Number of data items in evaluation set, Descriptive Information about the data, If applicable, what specific sensor type was used for Data Collection] <br>
**Dataset License(s):** [Name, Link applicable to dataset license or applicable Jira ticket or NVBug. Write none if not applicable (N/A). This is an internal-only field.] <br>

*Insert Key Performance Indicators or Evaluation Benchmarks Here (Reference https://docs.google.com/spreadsheets/d/1SwyHhBTFQJTLZ4tuc-JdDcjA7wy68DyWdTehGNUgJ6M/edit?gid=721511647#gid=721511647 for large language models)

## Inference:
**Engine:** [Tensor(RT), Triton, Or List Other Here] <br>
**Test Hardware [Name the specific test hardware model]:** <br>
* [Jetson XXNN] <br>
* [Drive X.X] <br>
* [List Other Here X.X]  <br>

(Internal Only: Not To Be Published) <br> 
**Computational Load** <br>
* The number and type of hardware units used to train the model <br>  
* The duration of model training measured in wall clock time (reported in units of days) and hardware time (reported in units of hardware hours, e.g. GPU hours) <br>  

**GPU Utilization Rate** <br>
* The compute used during model training (reported in units of integer or floating-point operations) <br>  
* The known or estimated emissions associated with model training (reported in tCO2eq) [AUTOMATICALLY GENERATED FROM ABOVE 3 ANSWERS] <br> 

*Additional content may be included here <br>

## Ethical Considerations:
NVIDIA believes Trustworthy AI is a shared responsibility and we have established policies and practices to enable development for a wide array of AI applications.  When downloaded or used in accordance with our terms of service, developers should work with their internal model team to ensure this model meets requirements for the relevant industry and use case and addresses unforeseen product misuse.  

For more detailed information on ethical considerations for this model, please see the Model Card++ Explainability, Bias, Safety & Security, and Privacy Subcards [Insert Link to Model Card++ subcards here].  

***You may remove "[]s" before publishing.  
